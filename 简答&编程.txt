1. 简单解释Python基于值的自动内存管理方式？	（简答）
答：Python采用的是基于值得内存管理方式，在Python中可以为不同变量赋值为相同值，这个值在内存中只有一份，多个变量指向同一个内存地址；Python具有自动内存管理功能，会自动跟踪内存中所有的值，对于没有任何变量指向的值，Python自动将其删除。


2. 写出Python运算符的两种功能？	（简答）
答：（1）数字位运算；2）集合交集运算。


3. 在Python中导入模块中的对象有哪几种方式？	（简答）
答：1)import 模块名 [as 别名]；2)from 模块名 import 对象名[ as 别名]；3)from math import *

4. 解释Python脚本程序的“__name__”变量及其作用？	（简答）
答：每个Python脚本在运行时都有一个“__name__”属性。如果脚本作为模块被导入，则其“__name__”属性的值被自动设置为模块名；如果脚本独立运行，则其“__name__”属性值被自动设置为“__main__”。利用“__name__”属性即可控制Python程序的运行方式。


5. 为什么应尽量从列表的尾部进行元素的增加与删除操作？（简答）
答：当列表增加或删除元素时，列表对象自动进行内存扩展或收缩，从而保证元素之间没有缝隙，但这涉及到列表元素的移动，效率较低，应尽量从列表尾部进行元素的增加与删除操作以提高处理速度。


6. 编写程序，生成一个包含20个随机整数的列表，然后对其中偶数下标的元素进行降序排列，奇数下标的元素不变。（提示：使用切片。）	
答：
import random
x = [random.randint(0,100) for i in range(20)]
x[::2] = sorted(x[::2], reverse=True)


7. 写出下面代码的运行结果。（简答）
def Sum(a, b=3, c=5):
	return sum([a, b, c])
print(Sum(a=8, c=2))
print(Sum(8))
print(Sum(8,2))	
答：
13
16
15


8. 下面的代码是否能够正确运行，若不能请解释原因；若能，请分析其执行结果。（简答）
>>> x = list(range(20))
>>> for i in range(len(x)):
	del x[i]
答：
无法正确执行，因为删除列表元素时会影响其他元素在列表中的索引，上面的代码会抛出下标越界的异常。



9. 阅读下面的代码，解释其功能。（简答）
>>> x = list(range(20))
>>> for index, value in enumerate(x):
		if value == 3:
			x[index] = 5
答：
将列表x中值为3的元素修改为5。


10. 编写函数，判断一个数字是否为素数，是则返回字符串YES，否则返回字符串NO。
答：
import math
def IsPrime(v):
	n = int(math.sqrt(v)+1)
	for i in range(2,n):
		if v%i==0:
			return No
		else:
			return Yes


11. 编写函数，模拟Python内置函数sorted()。
答：
def Sorted(v):
	t = v[::]
	r = []
	while t:
		tt = min(t)
		r.append(tt)
		t.remove(tt)
	return r


12. 阅读下面的代码，分析其执行结果。（简答）
def demo(*p):
	return sum(p)
print(demo(1,2,3,4,5))
print(demo(1,2,3))
答：
15
6


13. 阅读下面的代码，分析其执行结果。（简答）
def demo(a, b, c=3, d=100):
	return sum((a,b,c,d))
print(demo(1, 2, 3, 4))
print(demo(1, 2, d=3))
答：
10
9


14. 下面函数的功能为。（简答）
def demo(lst, k):
	if k<len(lst):
		return lst[k:]+lst[:k]
答：
将序列循环左移k位，得到新序列并返回

		
15. 阅读下面的程序，判断其是否可以正常运行，如果可以运行则写出执行结果，如果不能运行则写出理由。（简答）
class Test:
	def __init__(self, value):
		self.__value = value
	@property
	def value(self):
		return self.__value

t = Test(3)
t.value = 5
print(t.value)
答：
不能运行。程序中定义的是只读属性，不能修改属性的值。

16. 请写出能够找到Python源程序文件中所有类名标识符的正则表达式，注意不需要保留关键字，只要标识符（简答）
答：
r'(?<=class\s)([a-zA-Z0-9]\w*)(?=.*?:)$'


17. 请写出能够找到Python源程序文件中所有函数名标识符的正则表达式，注意不需要保留关键字，只要标识符（简答）
答：
r(?<=def\s)([a-zA-Z0-9]\w*)\((.*?)\)(?=:)$


18. 编写程序，实现将日期字符串st=2018-04-20格式转换为美国日期格式mm/dd/yyyy
答：
import re
st = 2018-04-20
s = re.sub((\d{4})-(\d{2})-(\d{2}), r\2/\3/\1, st)
print(s)


19. 请写出代码，将example = rone,two,three.four/file\six?seven[eight]nine|ten‘分割成元素为英文单词组成的列表
答：
import re
pattern = re.compile(r‘[,./\\?[\]\|]’)
pattern.split(example)


20. 请写出代码，将telNumber = Suppose my Phone No. is 0535-1234567,yours is 010-12345678, his is 025-87654321.字符串中所有电话号码提取出来，要求能够将区号与实际号码分开统计，并且输出区号与实际号码在字符串telNum中的位置信息
答：
import re
pattern = re.compile(r(\d{3,4})-(\d{7,8}))
index = 0
while True: 
	matchResult = pattern.search(telNumber, index)
	if not matchResult:
		break  
	print(-*30
	print(Success:‘)
	for i in range(3):
		print(Searched content:, matchResult.group(i),\
			Start from:,matchResult.start(i),End at:,matchResult.end(i),\
			Its span is:, matchResult.span(i))
	index = matchResult.end(2)


21. 根据课上知识，实现文本转换项目中，处理模块的基类，要求：使用泛型函数可以灵活调用子类相应方法
class Handler
答：
class Handler:
	def callback(self, prefix, name, *args):
		method = getattr(self, prefix + name, None)
		if callable(method):
			return method(*args)
		def start(self, name):
			self.callback(start_, name)
		def end(self, name):
			self.callback(end_, name)
		def sub(self, name):
			def substitution(match):
				result = self.callback(sub_, name, match)
				if result is None:
					return match.group(0)
				return result
			return substitution


22. 请简单描述MRO的三条原则	（简答）
答：
子类永远在父类前面
如果有多个父类，会根据它们在列表中的顺序被检查
如果对下一个类存在两个合法的选择，选择第一个父类


23. 请简单描述Python中成员函数的分类 （简答）
答：
公有——对象属性，可访问类和对象的数据成员，通过对象名直接调用
私有——对象属性，可访问类和对象的数据成员，只能在对象方法中使用self调用或在外部通过特殊方式调用
静态——非对象属性，不可访问对象数据成员，可通过类名和对象名调用
类方法——同静态方法，但定义时，一般使用“cls”作为其第一个参数名称，但也可以使用其他名称且在调用时不需为此参数传值


24. 请简述异常和错误有什么区别？	（简答）
答：
异常是指因为程序执行过程中出错而在正常控制流以外采取的行为。严格来说，语法错误和逻辑错误不属于异常，但有些语法错误往往会导致异常，例如由于大小写拼写错误而访问不存在的对象，或者试图访问不存在的文件，等等。


25. 使用pdb模块进行Python程序调试主要有哪几种用法？	（简答）
答：
1）在交互模式下使用pdb模块提供的功能可以直接调试语句块、表达式、函数等多种脚本。
2）在程序中嵌入断点来实现调试功能。在程序中首先导入pdb模块，然后使用pdb.set_trace()在需要的位置设置断点。如果程序中存在通过该方法调用显式插入的断点，那么在命令提示符环境下执行该程序或双击执行程序时将自动打开pdb调试环境，即使该程序当前不处于调试状态。
3）使用命令行调试程序。在命令行提示符下执行“python –m pdb 脚本文件名”，则直接进入调试环境；当调试结束或程序正常结束以后，pdb将重启该程序。


26. 已知使用sqlite3数据库。数据库文件info.db; <br/>有一表COMPANY 有四个属性 id ，name， address ，salary；<br/>请连接数据库，执行查询语句并打印全部行的数据。
答：
import sqlite3
conn = sqlite3.connect(info.db)
c = conn.cursor()
cursor = c.execute(SELECT id, name, address, salary from COMPANY)
for row in cursor:
	print("ID = ", row[0])
	print("NAME = ", row[1])
	print("ADDRESS = ", row[2])
	print("SALARY = ", row[3])
conn.close()


27. 文本文件info.txt中有五行数据，请使用readline()方法读取全部信息并打印。请写出实现代码。	
答：
f = open(test.txt)
while True:
	chunk = f.readline()
	if not chunk:
		break
	print(chunk)
f.close()


28. 在主线程中起两个子线程，都执行函数f()，函数f的功能是打印其参数。
答：
import threading
import time
def f(i):
	time.sleep
	print("I am from a thread, num = %d" %(i))
def main():
	for i in range(1,2):
		t = threading.Thread(target=f,args=(i,))
		t.setDaemon(True)
		t.start()
		

29. 写出在Python中在子类中调用父类方法的方式	（简答）
答：
a. super().父类方法名 #Python3.x
b. 父类名.父类方法名且必须在方法中显示传递self参数
